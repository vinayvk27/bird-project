code

def processed_img(img_path):
    img=load_img(img_path)
    img_size=img.size 
    width=img_size[0]
    height=img_size[1]
    res="bird"
    if (width==224 and height==224) or True:
        img=load_img(img_path,target_size=(224,224,3))
        img=img_to_array(img)
        img=img/255
        img=np.expand_dims(img,[0])
        answer=model.predict(img)
        y_class = answer.argmax(axis=-1)
        print(y_class)
        y = " ".join(str(x) for x in y_class)
        y = int(y)
        # if y in lab:
        res = lab[y]
        # print(res)
        return res
    else:
        # print("Please Upload Bird Image Only")
        return "bird"

def run():
    img1 = Image.open('./meta/logo1.png')
    img1 = img1.resize((350,350))
    st.image(img1,use_column_width=False)
    st.title("Birds Species Classification")
    # st.markdown('''<h4 style='text-align: left; color: #d73b5c;'>* Data is based "270 Bird Species also see 70 Sports Dataset"</h4>''',
                # unsafe_allow_html=True)

    img_file = st.file_uploader("Choose an Image of Bird", type=["jpg", "png"])
    if img_file is not None:
        st.image(img_file,use_column_width=False)
        save_image_path = './upload_images/'+img_file.name
        with open(save_image_path, "wb") as f:
            f.write(img_file.getbuffer())
        if st.button("Predict"):
            result = processed_img(save_image_path)
            if(result=="bird"):
                st.success("Please upload bird image")
            else:
                st.success("Predicted Bird is: "+result)
        if st.button("Bird Information"):
            result = processed_img(save_image_path)
            result1=get_wikipedia_info(result)
            st.markdown(result1, unsafe_allow_html=True)
run()